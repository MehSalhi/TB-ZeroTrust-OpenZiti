# Dockerfile to build the drone devices
# will stream a video for testing purposes

FROM debian:bullseye-slim
COPY ./video /video

RUN apt update 
RUN apt install -y apt-transport-https ca-certificates ncat telnet openssh-server
RUN curl -sSLf https://get.openziti.io/tun/package-repos.gpg \
| gpg --dearmor \
| tee /usr/share/keyrings/openziti.gpg >/dev/null 
RUN echo 'deb [signed-by=/usr/share/keyrings/openziti.gpg] https://packages.openziti.org/zitipax-openziti-deb-stable focal main' \
| tee /etc/apt/sources.list.d/openziti.list >/dev/null
RUN apt update --allow-insecure-repositories
#RUN apt update
RUN apt install -y ziti-edge-tunnel --allow-unauthenticated

# gstreamer install
RUN apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

# create the /dev/net/tun interface for the tunneler
RUN mkdir -p /dev/net && mknod /dev/net/tun c 10 200 && chmod 600 /dev/net/tun

# generate ssh keys
RUN ssh-keygen -A
